data_fig7_a
?separate_rows
data_fig7_a <- separate_rows(data_fig7_a,data_fig7_a$Diagnosis,sep = ',')
data_fig7_a <- separate_rows(data_fig7_a,'Diagnosis',sep = ',')
data_fig7_a
data_fig7_a <- separate_rows(data_fig7_a,'Diagnosis',sep = ',')
data_fig7_a <- aggregate(.~ID,data_fig7_a,length)
data_fig7_a
max(data_fig7_a$Diagnosis)
summary(data_fig7_a$Diagnosis)
table(data_fig7_a)
data_fig7_merge <- merge(data_fig7_a, data_fig6_ID_CLASS,by = 'ID')
data_fig7_merge <- select(data_fig7_merge,c('Diagnosis','Birthday_class'))
data_fig7_merge <- as.data.frame(table(data_fig7_merge))
data_fig7_merge
data_fig7_merge
ggplot(data_fig7_merge,aes(fill = Diagnosis,y = Freq,x = Birthday_class)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in each age group ')
data_fig7_merge
ggplot(data_fig7_merge,aes(fill = Diagnosis,y = Freq,x = Birthday_class)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in each age group ') + labs(x = 'Age group')
ggplot(data_fig7_merge,aes(fill = Diagnosis,y = Freq,x = Birthday_class)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in each age group ') + labs(x = 'Age groups')
#fig 8
data_fig6_final
#fig 8
data_fig6
#fig 8
data_fig6_final
#fig 8
data_fig6
#fig 8
data_fig6_ID_CLASS
#fig 8
data_fig5_patient
#fig 8
data_fig5_patient
data_fig6
#fig 8
data_fig5_patient
data_fig7_a
#fig 8
data_fig8_merge <- merge(data_fig5_patient,data_fig7_a,by = 'ID')
data_fig8_merge
#fig 8
data_fig8_merge <- merge(data_fig5_patient,data_fig7_a,by = 'ID')
data_fig8_merge <- select(data_fig8_merge,c('ill','Diagnosis'))
data_fig8_merge
table(data_fig8_merge)
data_fig8_merge <- as.data.frame(table(data_fig8_merge))
ggplot(data_fig7_merge,aes(fill = Diagnosis,y = Freq,x = ill)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in each age group ') + labs(x = 'Age groups')
ggplot(data_fig8_merge,aes(fill = Diagnosis,y = Freq,x = ill)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Age groups')
ggplot(data_fig8_merge,aes(fill = Diagnosis,y = Freq,x = ill)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Test result of Thrombosis')
#fig 9
data_fig5_patient
#fig 9
data_fig5_patient[data_fig5_patient$ill == 'positive',]
#fig 9
data_b
#fig 9
data_fig9_raw <- select(data_b,c('ID','Diagnosis','Thrombosis')
#fig 9
data_fig9_raw <- select(data_b,c('ID','Diagnosis','Thrombosis'))
data_fig9_raw
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != '',]
data_fig9_raw
unique(data_fig9_raw$Thrombosis)
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != ''& data_fig9_raw$Thrombosis!=3 ,]
data_fig9_raw
sum(data_fig9_raw$Thrombosis!=0)
data_b
#load data
library(tidyr)
library(dplyr)
library(ggplot2)
data_a <- read.csv('data/TSUMOTO_A.CSV',fileEncoding="latin1")
data_b <- read.csv('data/TSUMOTO_B.CSV',fileEncoding="latin1")
data_c <- read.csv('data/TSUMOTO_C.CSV',fileEncoding="latin1")
data_a
data_b
data_c
#fig 9
data_fig9_raw <- select(data_b,c('ID','Diagnosis','Thrombosis'))
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != ''& data_fig9_raw$Thrombosis!=3 ,]
data_fig9_raw
data_fig9_raw$Diagnosis[1]
data_fig9_raw$Diagnosis[1]
count.fields(textConnection(data_fig9_raw$Diagnosis[1]), sep = ",")
data_fig9_raw$Diagnosis[1]
count.fields(textConnection(data_fig9_raw$Diagnosis[1]), sep = ",")
data_fig9_raw$Diagnosis <- count.fields(textConnection(data_fig9_raw$Diagnosis),SEP = ',')
data_fig9_raw$Diagnosis[1]
count.fields(textConnection(data_fig9_raw$Diagnosis[1]), sep = ",")
data_fig9_raw$Diagnosis <- count.fields(textConnection(data_fig9_raw$Diagnosis),sep = ',')
data_fig9_raw
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != 0,]
data_fig9_raw
#fig 9
data_fig9_raw <- select(data_b,c('ID','Diagnosis','Thrombosis'))
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != ''& data_fig9_raw$Thrombosis!=3 ,]
data_fig9_raw
data_fig9_raw$Diagnosis[1]
count.fields(textConnection(data_fig9_raw$Diagnosis[1]), sep = ",")
data_fig9_raw$Diagnosis <- count.fields(textConnection(data_fig9_raw$Diagnosis),sep = ',')
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Thrombosis != 0,]
data_fig9_raw
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
ggplot(data_fig8_merge,aes(fill = Diagnosis,y = Diagnosis,x = Thrombosis)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Test result of Thrombosis')
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
ggplot(data_fig9_raw,aes(fill = Diagnosis,y = Diagnosis,x = Thrombosis)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Test result of Thrombosis')
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
ggplot(data_fig9_raw,aes(y = Diagnosis,x = Thrombosis)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Test result of Thrombosis')
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Thrombosis != 0,]
data_fig9_raw$Thrombosis <- as.factor(data_fig9_raw)
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
ggplot(data_fig9_raw,aes(y = Diagnosis,x = Thrombosis)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Test result of Thrombosis')
#fig 9
data_fig9_raw <- select(data_b,c('ID','Diagnosis','Thrombosis'))
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != ''& data_fig9_raw$Thrombosis!=3 ,]
data_fig9_raw
data_fig9_raw$Diagnosis[1]
count.fields(textConnection(data_fig9_raw$Diagnosis[1]), sep = ",")
data_fig9_raw$Diagnosis <- count.fields(textConnection(data_fig9_raw$Diagnosis),sep = ',')
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Thrombosis != 0,]
data_fig9_raw$Thrombosis <- as.factor(data_fig9_raw)
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
ggplot(data_fig9_raw,aes(fill = Diagnosis,y = Diagnosis,x = Thrombosis)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Test result of Thrombosis')
data_fig9_raw
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != ''& data_fig9_raw$Thrombosis!=3 ,]
data_fig9_raw
#fig 9
data_fig9_raw <- select(data_b,c('ID','Diagnosis','Thrombosis'))
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != ''& data_fig9_raw$Thrombosis!=3 ,]
data_fig9_raw
data_fig9_raw$Diagnosis[1]
count.fields(textConnection(data_fig9_raw$Diagnosis[1]), sep = ",")
data_fig9_raw$Diagnosis <- count.fields(textConnection(data_fig9_raw$Diagnosis),sep = ',')
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Thrombosis != 0,]
data_fig9_raw$Thrombosis <- as.factor(data_fig9_raw$Thrombosis)
data_fig9_raw
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
ggplot(data_fig9_raw,aes(fill = Diagnosis,y = Diagnosis,x = Thrombosis)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Test result of Thrombosis')
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
ggplot(data_fig9_raw,aes(fill = Diagnosis,y = sum(Diagnosis),x = Thrombosis)) + geom_bar(position = 'stack',stat = 'identity') + ggtitle('The number of diagnosis in whether have Thrombosis or not ') + labs(x = 'Test result of Thrombosis')
ggplot(data_fig9_raw,aes(x=Thrombosis,y = Diagnosis))+geom_bar(stat="identity") + labs(title = 'Top 10 Diagnosis among all the sample',x = 'Patterns', y = 'Counts' )
data_fig9_raw$Diagnosis <- as.factor(data_fig9_raw$Diagnosis)
ggplot(data_fig9_raw,aes(x=Thrombosis,y = Diagnosis,fill = Diagnosis))+geom_bar(stat="identity") + labs(title = 'Top 10 Diagnosis among all the sample',x = 'Patterns', y = 'Counts' )
#fig 10
data_b
#fig 10
format(data_b$Examination.Date[1],'%m")
#fig 10
format(data_b$Examination.Date[1],'%m')
#fig 10
format(data_b$Examination.Date[1],'%M')
?format
data_b$Examination.Date[1]
data_b$Examination.Date[1][1]
#fig 10
month(data_b$Examination.Date)
#fig 10
library(lubridate)
month(data_b$Examination.Date)
#fig 10
library(lubridate)
month(as.POSIXlt(data_b$Examination.Date))
#fig 10
library(lubridate)
month(as.POSIXlt(data_b$Examination.Date[1]))
data_b
data_fig9_raw
data_fig9_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Data','ID')),by = 'ID')
data_fig9_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig9_raw
data_fig9_raw$Examination.Date <- month(as.POSIXlt(data_fig9_raw$Examination.Date))
as.POSIXlt(data_fig9_raw$Examination.Date)
class(data_fig9_raw$Examination.Date)
data_fig9_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig9_raw$Examination.Date))
data_fig9_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig9_raw$Examination.Date)))
data_fig9_raw
unique(data_fig9_raw$Thrombosis)
(data_fig9_raw$Thrombosis)
data_fig9_raw$Diagnosis[data_fig9_raw$Diagnosis == '1' | data_fig9_raw$Diagnosis == '2'] <- 'Positive'
data_fig9_raw$Diagnosis[data_fig9_raw$Diagnosis == '1' | data_fig9_raw$Diagnosis == '2']
data_fig9_raw
#fig 9
data_fig9_raw <- select(data_b,c('ID','Diagnosis','Thrombosis'))
data_fig9_raw <- data_fig9_raw[complete.cases(data_fig9_raw$Diagnosis),]
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Diagnosis != ''& data_fig9_raw$Thrombosis!=3 ,]
data_fig9_raw
data_fig9_raw$Diagnosis[1]
count.fields(textConnection(data_fig9_raw$Diagnosis[1]), sep = ",")
data_fig9_raw$Diagnosis <- count.fields(textConnection(data_fig9_raw$Diagnosis),sep = ',')
data_fig9_raw <- data_fig9_raw[data_fig9_raw$Thrombosis != 0,]
data_fig9_raw$Thrombosis <- as.factor(data_fig9_raw$Thrombosis)
data_fig9_raw$Diagnosis <- as.factor(data_fig9_raw$Diagnosis)
table(select(data_fig9_raw,'Diagnosis','Thrombosis'))
ggplot(data_fig9_raw,aes(x=Thrombosis,y = Diagnosis,fill = Diagnosis))+geom_bar(stat="identity") + labs(title = 'Top 10 Diagnosis among all the sample',x = 'Patterns', y = 'Counts' )
#fig 10
library(lubridate)
month(as.POSIXlt(data_b$Examination.Date[1]))
data_fig10_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig10_raw
data_fig10_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig10_raw
data_fig9_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig9_raw$Examination.Date)))
data_fig10_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig10_raw
data_fig10_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig10_raw$Examination.Date)))
data_fig10_raw
data_fig10_raw <- elect(data_fig10_raw,c('Thrombosis','Examination.Date'))
data_fig10_raw <- select(data_fig10_raw,c('Thrombosis','Examination.Date'))
data_fig10_raw
data_fig10_raw$Thrombosis <- '1' * length(data_fig10_raw$Thrombosis)
data_fig10_raw$Thrombosis <- 'Positive' * length(data_fig10_raw$Thrombosis)
for (i in 1:length(data_fig10_raw$Thrombosis)){
data_fig10_raw$Thrombosis[i] <- 'Positive'
}
data_fig10_raw
data_fig10_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig10_raw
data_fig10_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig10_raw$Examination.Date)))
data_fig10_raw <- select(data_fig10_raw,c('Thrombosis','Examination.Date'))
data_fig10_raw
data_fig10_raw$Thrombosis <- as.character(data_fig10_raw$Thrombosis)
for (i in 1:length(data_fig10_raw$Thrombosis)){
data_fig10_raw$Thrombosis[i] <- 'Positive'
}
data_fig10_raw
table(data_fig10_raw)
ggplot(as.data.frame(table(data_fig10_raw)),aes(x=Examination.Date,y = Thrombosis))+geom_bar(stat="identity") + labs(title = 'Distribution of exmaination positive result',x = 'Months', y = 'Counts' )
data_fig10_raw <- as.data.frame(table(data_fig10_raw))
data_fig10_raw
ggplot(as.data.frame(table(data_fig10_raw)),aes(x=Examination.Date,y = Freq))+geom_bar(stat="identity") + labs(title = 'Distribution of exmaination positive',x = 'Months', y = 'Counts' )
ggplot(as.data.frame(table(data_fig10_raw)),aes(x=Examination.Date,y = Freq))+geom_histogram(stat="identity") + labs(title = 'Distribution of exmaination positive',x = 'Months', y = 'Counts' )
data_fig10_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig10_raw
data_fig10_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig10_raw$Examination.Date)))
data_fig10_raw <- select(data_fig10_raw,c('Thrombosis','Examination.Date'))
data_fig10_raw
data_fig10_raw$Thrombosis <- as.character(data_fig10_raw$Thrombosis)
for (i in 1:length(data_fig10_raw$Thrombosis)){
data_fig10_raw$Thrombosis[i] <- 'Positive'
}
data_fig10_raw
data_fig10_raw <- as.data.frame(table(data_fig10_raw))
data_fig10_raw
data_fig10_raw <- as.data.frame(table(data_fig10_raw))
data_fig10_raw$ <- select(data_fig10_raw,c('Examination.Date','Freq'))
data_fig10_raw <- as.data.frame(table(data_fig10_raw))
data_fig10_raw <- select(data_fig10_raw,c('Examination.Date','Freq'))
ggplot(as.data.frame(table(data_fig10_raw)),aes(x=Examination.Date,y = Freq))+geom_histogram(stat="identity") + labs(title = 'Distribution of exmaination positive',x = 'Months', y = 'Counts' )
data_fig10_raw
data_fig10_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig10_raw
data_fig10_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig10_raw$Examination.Date)))
data_fig10_raw <- select(data_fig10_raw,c('Thrombosis','Examination.Date'))
data_fig10_raw
data_fig10_raw$Thrombosis <- as.character(data_fig10_raw$Thrombosis)
for (i in 1:length(data_fig10_raw$Thrombosis)){
data_fig10_raw$Thrombosis[i] <- 'Positive'
}
data_fig10_raw
data_fig10_raw <- as.data.frame(table(data_fig10_raw))
data_fig10_raw <- select(data_fig10_raw,c('Examination.Date','Freq'))
data_fig10_raw
ggplot(data_fig10_raw, aes(x=Examination, y = Freq)) +
geom_bar(stat="identity")
ggplot(data_fig10_raw, aes(x=Examination.Date, y = Freq)) +
geom_bar(stat="identity")
sum(data_fig10_raw$Freq)
data_fig10_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig10_raw <- data_fig10_raw[complete.cases(data_fig10_raw),]
data_fig10_raw
data_fig10_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig10_raw$Examination.Date)))
data_fig10_raw <- select(data_fig10_raw,c('Thrombosis','Examination.Date'))
data_fig10_raw
data_fig10_raw$Thrombosis <- as.character(data_fig10_raw$Thrombosis)
for (i in 1:length(data_fig10_raw$Thrombosis)){
data_fig10_raw$Thrombosis[i] <- 'Positive'
}
data_fig10_raw
data_fig10_raw <- as.data.frame(table(data_fig10_raw))
data_fig10_raw <- select(data_fig10_raw,c('Examination.Date','Freq'))
sum(data_fig10_raw$Freq)
data_fig10_raw <- as.data.frame(table(data_fig10_raw))
data_fig10_raw <- select(data_fig10_raw,c('Examination.Date','Freq'))
ggplot(data_fig10_raw, aes(x=Examination.Date, y = Freq)) +
geom_bar(stat="identity") + labs(title = 'Examination positive distribution in different month period')
data_fig10_raw<- merge(data_fig9_raw,select(data_b,c('Examination.Date','ID')),by = 'ID')
data_fig10_raw <- data_fig10_raw[complete.cases(data_fig10_raw),]
data_fig10_raw
data_fig10_raw$Examination.Date <- month(as.POSIXlt(as.Date(data_fig10_raw$Examination.Date)))
data_fig10_raw <- select(data_fig10_raw,c('Thrombosis','Examination.Date'))
data_fig10_raw
data_fig10_raw$Thrombosis <- as.character(data_fig10_raw$Thrombosis)
for (i in 1:length(data_fig10_raw$Thrombosis)){
data_fig10_raw$Thrombosis[i] <- 'Positive'
}
data_fig10_raw
data_fig10_raw <- as.data.frame(table(data_fig10_raw))
data_fig10_raw <- select(data_fig10_raw,c('Examination.Date','Freq'))
sum(data_fig10_raw$Freq)
ggplot(data_fig10_raw, aes(x=Examination.Date, y = Freq)) +
geom_bar(stat="identity") + labs(title = 'Examination positive distribution in different month period')
summary(data_a)
summary(data_b)
summary(data_c)
dim(data_a)
dim(data_b)
dim(data_c)
ggplot(data_fig1, aes(x=data_a_count, y = Freq)) +
geom_bar(stat="identity") + labs(title = 'Gender distribution', x = 'Gender', y = 'Counts')
ggplot(data_fig1, aes(x=data_a_count, y = Freq,fill = data_a_count)) +
geom_bar(stat="identity") + labs(title = 'Gender distribution', x = 'Gender', y = 'Counts')
data_fig2
ggplot(data_fig2, aes(x=Birthday,fill = Birthday)) + geom_histogram(bins = 10)
data_fig2
ggplot(data_fig2, aes(x=Birthday,fill = count)) + geom_histogram(bins = 10)
data_fig2
ggplot(data_fig2, aes(x=Birthday),fill = count) + geom_histogram(bins = 10)
data_fig2
ggplot(data_fig2, aes(x=Birthday),fill = count) + geom_histogram(bins = 10) + labs(title = 'Age distribution',x = 'Birth year', y = 'Total number')
ggplot(data_fig10_raw, aes(x=Examination.Date, y = Freq)) +
geom_line(stat="identity") + labs(title = 'Examination positive distribution in different month period')
ggplot(data_fig10_raw, aes(x=Examination.Date, y = Freq)) +
geom_line() + labs(title = 'Examination positive distribution in different month period')
ggplot(data_fig10_raw, aes(x=Examination.Date, y = Freq)) +
geom_bar(stat="identity") + labs(title = 'Examination positive distribution in different month period')
ggplot(data_fig10_raw, aes(x=Examination.Date, y = Freq,fill = Freq)) +
geom_bar(stat="identity") + labs(title = 'Examination positive distribution in different month period')
library(plotly)
library(tidyverse)
library(plyr)
library(dplyr)
library(readr)
library(lubridate)
library(knitr)
library(tidyr)
library(tibble)
library(reshape2)
library(glmnet)
library(collapsibleTree)
library(dygraphs)
library(plotly)
library(heatmaply)
sm_df <- read.csv('sm_final_output.csv')
sm_df <- read.csv('sm_final_output.csv')
library(tidyverse)
library(plyr)
library(dplyr)
library(readr)
library(lubridate)
library(knitr)
library(tidyr)
library(tibble)
library(reshape2)
library(glmnet)
library(collapsibleTree)
library(dygraphs)
library(plotly)
library(heatmaply)
sm_df <- read.csv('sm_final_output.csv')
getwd()
setwd("~/")
getwd()
setwd("~/a5")
sm_df <- read.csv('sm_final_output.csv')
sm_df
install.packages("gapminder")
library(gapminder)
library(plotly)
sm_df<- read.csv('sm_final_output.csv')
setwd("~/anly503-fall2020-a5-handsomegua-1")
sm_df<- read.csv('sm_final_output.csv')
stock <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/finance-charts-apple.csv')
head(stock)
head(sm_df)
library(tidyquant)
class(stock$Date)
class(sm_df$Time)
library(plotly)
library(tidyquant)
library(plotly)
library(tidyquant)
stock <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/finance-charts-apple.csv')
sm_df<- read.csv('sm_final_output.csv')
fig <- plot_ly(sm_df, type = 'scatter', mode = 'lines')%>%
add_trace(x = ~Time, y = ~powerallphases)%>%
layout(showlegend = F, title='Time Series with Range Slider and Selectors in each Household',
xaxis = list(rangeslider = list(visible = T),
rangeselector=list(
buttons=list(
list(count=1, label="1h", step="hour", stepmode="backward"),
list(count=6, label="6h", step="hour", stepmode="backward"),
list(count=1, label="1D", step="day", stepmode="todate"),
list(count=1, label="1M", step="month", stepmode="backward"),
list(step="all")
))))
fig <- fig %>%
layout(
xaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
plot_bgcolor='#e5ecf6', margin = 0.1, width = 900)
fig
fig <- plot_ly(sm_df, type = 'scatter', mode = 'lines')%>%
add_trace(x = ~Time, y = ~powerallphases,House = 4)%>%
add_trace(x = ~Time, y = ~powerallphases,House = 5)%>%
add_trace(x = ~Time, y = ~powerallphases,House = 6)%>%
layout(showlegend = F, title='Time Series with Range Slider and Selectors in each Household',
xaxis = list(rangeslider = list(visible = T),
rangeselector=list(
buttons=list(
list(count=1, label="1h", step="hour", stepmode="backward"),
list(count=6, label="6h", step="hour", stepmode="backward"),
list(count=1, label="1D", step="day", stepmode="todate"),
list(count=1, label="1M", step="month", stepmode="backward"),
list(step="all")
))))
fig <- fig %>%
layout(
xaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
plot_bgcolor='#e5ecf6', margin = 0.1, width = 900)
fig
sm_df$House
fig <- plot_ly(sm_df, type = 'scatter', mode = 'lines')%>%
add_trace(x = ~Time, y = ~powerallphases,name = 4)%>%
add_trace(x = ~Time, y = ~powerallphases,name = 5)%>%
add_trace(x = ~Time, y = ~powerallphases,name = 6)%>%
layout(showlegend = F, title='Time Series with Range Slider and Selectors in each Household',
xaxis = list(rangeslider = list(visible = T),
rangeselector=list(
buttons=list(
list(count=1, label="1h", step="hour", stepmode="backward"),
list(count=6, label="6h", step="hour", stepmode="backward"),
list(count=1, label="1D", step="day", stepmode="todate"),
list(count=1, label="1M", step="month", stepmode="backward"),
list(step="all")
))))
fig <- fig %>%
layout(
xaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
plot_bgcolor='#e5ecf6', margin = 0.1, width = 900)
fig
fig <- plot_ly(sm_df, type = 'scatter', mode = 'lines')%>%
layout(showlegend = F, title='Time Series with Range Slider and Selectors in each Household',
xaxis = list(rangeslider = list(visible = T),
rangeselector=list(
buttons=list(
list(count=1, label="1h", step="hour", stepmode="backward"),
list(count=6, label="6h", step="hour", stepmode="backward"),
list(count=1, label="1D", step="day", stepmode="todate"),
list(count=1, label="1M", step="month", stepmode="backward"),
list(step="all")
))))
fig <- fig %>%
layout(
xaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
plot_bgcolor='#e5ecf6', margin = 0.1, width = 900)
fig
sm_df<- read.csv('sm_final_output.csv')
fig <- plot_ly(sm_df, type = 'scatter', mode = 'lines')%>%
add_trace(x = ~Time, y = ~powerallphases,split = ~House)%>%
layout(showlegend = F, title='Time Series with Range Slider and Selectors in each Household',
xaxis = list(rangeslider = list(visible = T),
rangeselector=list(
buttons=list(
list(count=1, label="1h", step="hour", stepmode="backward"),
list(count=6, label="6h", step="hour", stepmode="backward"),
list(count=1, label="1D", step="day", stepmode="todate"),
list(count=1, label="1M", step="month", stepmode="backward"),
list(step="all")
))))
fig <- fig %>%
layout(
xaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
yaxis = list(zerolinecolor = '#ffff',
zerolinewidth = 2,
gridcolor = 'ffff'),
plot_bgcolor='#e5ecf6', margin = 0.1, width = 900)
fig
knitr::opts_chunk$set(echo = TRUE)
htmlwidgets::saveWidget(as_widget(fig), "plotly.html")
